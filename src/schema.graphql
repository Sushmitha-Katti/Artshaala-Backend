# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}


type Mutation {
  createItem(title: String!,description: String, specification: String!, category: String ,brand:String, type: String, price: Int!,stock:Int, size:String, images: [String] ): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): Item
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
  createOrder(token: String!): Order!
  createComment(comment: String, rating: Float!,itemid: ID!): Comment!
  createBlog(title: String!, image: String!, headers:String!, description: String!): Blog!
  deleteBlog(id: ID!): Blog
}

type Query {
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
  users: [User]!
  order(id: ID!): Order
  orders(orderBy: OrderOrderByInput): [Order]!
  comments(where: CommentWhereInput):[Comment]
  commentsConnection(where: CommentWhereInput,orderBy: CommentOrderByInput,skip: Int,after: String,before: String,first: Int,last: Int):CommentConnection!
  blogs: [Blog]!
  blog(id: ID!): Blog
}

type User{
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
  orders: [OrderItem]
}
